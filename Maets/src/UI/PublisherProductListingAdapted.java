/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Common.DoNothingCommand;
import Common.LogoutCommand;
import Common.NavigateToCommand;
import Controller.PublisherUIHandler;
import Controller.StorePageHandler;
import Controller.UIHandler;
import Memento.CareTaker;
import Memento.Memento;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jakec
 */
public class PublisherProductListingAdapted extends javax.swing.JPanel {
    
    public UIHandler uiHandler;
    private PublisherUIHandler handler;
    private javax.swing.JFrame frame;
    
    public PublisherProductListingAdapted(JFrame mainFrame, UIHandler uiHandler) {
        this.frame = mainFrame;
        this.uiHandler = uiHandler;
        handler = new PublisherUIHandler(1);
        
        logoutB = new CommandJbutton(new LogoutCommand(uiHandler.getUsername()));
        productPageB = new CommandJbutton(new DoNothingCommand());
        
        backB = new CommandJbutton (new NavigateToCommand(CareTaker.getInstance().get(1),mainFrame));
        initComponents();
        
        // Display product info in the table
        displayProductInfoInTable();
    }
    
    public PublisherProductListingAdapted(JFrame frame, JPanel panel, UIHandler uiHandler) {
        this.frame = frame;
        this.uiHandler = uiHandler;
        handler = new PublisherUIHandler(1);
        
        logoutB = new CommandJbutton(new LogoutCommand(uiHandler.getUsername()));
        productPageB = new CommandJbutton(new DoNothingCommand());
        backB = new CommandJbutton (new NavigateToCommand(CareTaker.getInstance().get(1),frame));
        initComponents();
        
        // Display product info in the table
        displayProductInfoInTable();
    }

    PublisherProductListingAdapted(JFrame frame, UIHandler uiHandler, int id) {
        
        this.frame = frame;
        this.uiHandler = uiHandler;
        handler = new PublisherUIHandler(id);
        
        logoutB = new CommandJbutton(new LogoutCommand(uiHandler.getUsername()));
        productPageB = new CommandJbutton(new DoNothingCommand());
        backB = new CommandJbutton (new DoNothingCommand());
        initComponents();
        
        // Display product info in the table
        displayProductInfoInTable();
    }
    
     private void displayProductInfoInTable() {
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int rowCount = model.getRowCount();
        
        // Remove all existing rows
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        // Add product listings
        Object[][] listings = handler.getAllProductListingByPublisher(1);
        
        for (Object[] list : listings) {
            model.addRow(list);
        }
    }

    
      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        
        productInfoLabel = new javax.swing.JLabel();
        addGameButton = new CommandJbutton(new NavigateToCommand(new PublisherGameDataInputAdapted(frame,this,uiHandler, handler),frame));
        addMovieButton = new CommandJbutton(new NavigateToCommand(new PublisherMovieDataInput(frame,this,uiHandler, handler),frame));
        productScrollPane = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();

        productInfoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productInfoLabel.setText("Product Info");

        backB.setText("Back");
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });

        addGameButton.setText("Add new Game");
        addGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGameButtonActionPerformed(evt);
            }
        });

        logoutB.setText("Logout");
        logoutB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBActionPerformed(evt);
            }
        });
        addMovieButton.setText("Add new Movie");
        addMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieButtonActionPerformed(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Description", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productScrollPane.setViewportView(productTable);

        productPageB.setText("Product Page");
        productPageB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productPageBActionPerformed(evt);
            }
        });
        
        backB.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(productInfoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backB))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(productScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addGameButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoutB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addMovieButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productPageB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productInfoLabel)
                    .addComponent(backB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logoutB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(productPageB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addMovieButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addGameButton))
                    .addComponent(productScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>                        

     private void backBActionPerformed(java.awt.event.ActionEvent evt) {
        backB = new CommandJbutton(new NavigateToCommand(CareTaker.getInstance().get(1),frame));
        backB.execute();
    }                                      

    private void addGameButtonActionPerformed(java.awt.event.ActionEvent evt) {
        CareTaker.getInstance().add(new Memento(this));
        addGameButton.execute();
    }                                             

    private void addMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {
        CareTaker.getInstance().add(new Memento(this));   
        addMovieButton.execute();
    }                                              

    private void productPageBActionPerformed(java.awt.event.ActionEvent evt) {               
        int selectedRow = productTable.getSelectedRow();
        if (selectedRow == -1) return;
        
        String selectedProduct = (String) productTable.getValueAt(selectedRow, 0);
        productPageB = new CommandJbutton(new NavigateToCommand(new ProductPanelAdapted(frame,this,uiHandler,selectedProduct),frame));
        productPageB.execute();
    }
    private void logoutBActionPerformed(java.awt.event.ActionEvent evt) {   
        
        LogoutCommand logoutCommand =  (LogoutCommand) logoutB.command;
        logoutCommand.execute();
        logoutB.setCommand(new NavigateToCommand(new LoginPanel(frame,this,uiHandler),frame));
        logoutB.execute();
        // TODO add your handling code here:
    }
    // Variables declaration - do not modify                     
    private CommandJbutton addGameButton;
    private CommandJbutton addMovieButton;
    private CommandJbutton backB;
    private CommandJbutton logoutB;
    private javax.swing.JLabel productInfoLabel;
    private CommandJbutton productPageB;
    private javax.swing.JScrollPane productScrollPane;
    private javax.swing.JTable productTable;
    // End of variables declaration                   
}
